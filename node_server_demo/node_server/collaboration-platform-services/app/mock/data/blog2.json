{
  "blog_id": "blog_mock_2",
  "title": "Graph Modeling Guidelines",
  "author": null,
  "content": "<p>This document aims to provide some guidelines to follow while forming a graph data model.</p>\n\n<h2>Parts of a Graph</h2>\n\n<p>Let’s take a quick look at the different parts of a graph.</p>\n\n<ul>\n<li>Node – This refers to a vertex and represents an entity.</li>\n<li>Relationship – This refers to an edge and represents relationships between 2 entities.</li>\n<li>Properties – These are attributes which are used to further describe either nodes or vertices.</li>\n</ul>\n\n<p><a href=\"https://vista-mindtree.cloudapp.net/coe_open/wp-content/uploads/2015/06/7.png\"><img class=\"alignnone size-full wp-image-5220\" src=\"https://vista-mindtree.cloudapp.net/coe_open/wp-content/uploads/2015/06/7.png\" alt=\"graphmodeling7\" width=\"283\" height=\"323\" /></a></p>\n\n<h2>Modeling process</h2>\n\n<h3>Start simple Always start with a simple graph with just nodes and relationships. Ignore the properties at this time. This part of graph modeling is much like forming a domain model. Start with identifying the important nodes or entities in your system and how they are related to each other with relationships. Let’s consider the below statement, Two people, John and Sally, are friends. Both John and Sally have read the book, Graph Databases.</h3>\n\n<h3>Identify nodes In the above statement let’s identify the nodes. A good way to identify the entities of the system is to look for the “Subject” of the sentence. We can safely conclude that “Person” and “Book” are the entities. Two people,</h3>\n\n<p><strong>John</strong> and <strong>Sally</strong>, are friends. Both <strong>John</strong> and <strong>Sally</strong> have read the book, <strong>Graph Databases</strong>.</p>\n\n<h3>Identify relationships Let’s move on to relationships. The way to identify relationships is to look for the “Predicates” in a sentence. We can see that the words “friend” and “read” are important here. These will be our relationships. Two people, John and Sally, are</h3>\n\n<p><strong>friends</strong>. Both John and Sally have <strong>read</strong> the book, Graph Databases.</p>\n\n<h3>Simple graph Let’s draw the simple graph with this information.</h3>\n\n<p><a href=\"https://vista-mindtree.cloudapp.net/coe_open/wp-content/uploads/2015/06/1.png\"><img class=\"alignnone size-full wp-image-5203\" src=\"https://vista-mindtree.cloudapp.net/coe_open/wp-content/uploads/2015/06/1.png\" alt=\"graphmodeling1\" width=\"716\" height=\"353\" /></a></p>\n\n<h3>Property graph model The above graph is by no means complete. We are still missing a lot of information. Like,</h3>\n\n<ol>\n<li>When did John and Sally become friends?</li>\n<li>How old are John and Sally?</li>\n<li>When did John read the book? And did he like it? To answer such questions, we need to introduce properties to our graph. Once we do that, our graph will look as below, </li>\n</ol>\n\n<p><a href=\"https://vista-mindtree.cloudapp.net/coe_open/wp-content/uploads/2015/06/2.png\"><img class=\"alignnone size-full wp-image-5197\" src=\"https://vista-mindtree.cloudapp.net/coe_open/wp-content/uploads/2015/06/2.png\" alt=\"graphmodeling2\" width=\"784\" height=\"426\" /></a></p>\n\n<h2>Guidelines Our graph model is looking pretty good. Here are a few more guidelines to follow when modeling a graph.</h2>\n\n<h3>Heavy nodes A node can grow very heavy when we cram a lot of properties on it. How many of those properties are really describing that particular node?</h3>\n\n<p><em>Make sure each of the properties really do belong there</em>. Some properties would be better off as nodes or relationships.</p>\n\n<h3>Relationships as nodes There may be cases where a relationship will be better off as a node. This can occur because mistakes were made while identifying nodes. E.g. John sent email to sally Here “SENT_EMAIL_TO” can be a relationship.</h3>\n\n<p><a href=\"https://vista-mindtree.cloudapp.net/coe_open/wp-content/uploads/2015/06/3.png\"><img class=\"alignnone size-full wp-image-5198\" src=\"https://vista-mindtree.cloudapp.net/coe_open/wp-content/uploads/2015/06/3.png\" alt=\"graphmodeling3\" width=\"452\" height=\"169\" /></a> But that would be wrong. “EMAIL” needs to be a separate node as it is an entity. “SENT” and “SENT_TO” can be relationships. <a href=\"https://vista-mindtree.cloudapp.net/coe_open/wp-content/uploads/2015/06/4.png\"><img class=\"alignnone size-full wp-image-5199\" src=\"https://vista-mindtree.cloudapp.net/coe_open/wp-content/uploads/2015/06/4.png\" alt=\"graphmodeling4\" width=\"413\" height=\"305\" /></a></p>\n\n<h3>Properties as nodes We need to ensure that each property of a node actually belongs there. It is quite possible that we have misread a node as a property. E.g. John’s nationality is American One could easily represent John’s nationality as a property. But another way to put it is to make “America” as a node. We can then have a “HAS_NATIONALITY” relationship from John to America. This allows us to generate reports better. It would be very easy to find out the total number of Americans, for instance.</h3>\n\n<h3>Deciding if the property belongs with a node or a relationship It is also important that we don’t accidentally add a property to a node which actually belongs to a relationship. If the property better describes a relationship, then it should not exist on either node.</h3>\n\n<h3>Bi-directional relationships We may be tempted to use redundant bi-directional relationships. This is unnecessary as most graph databases and their query languages allow us to traverse a relationship from any side. E.g. John has read graph databases book. The graph databases book has been read by John. Please note that bi-directional relationships are not always redundant. They are not redundant if their properties and their meaning varies.</h3>\n\n<h3>Quantifying relationships We should avoid using different relationships when the strength varies. E.g. John loves Sally. Sally likes John Do the above statements contain 2 different relationships? “LOVE” and “LIKE”?</h3>\n\n<p><a href=\"https://vista-mindtree.cloudapp.net/coe_open/wp-content/uploads/2015/06/5.png\"><img class=\"alignnone size-full wp-image-5200\" src=\"https://vista-mindtree.cloudapp.net/coe_open/wp-content/uploads/2015/06/5.png\" alt=\"graphmodeling5\" width=\"177\" height=\"261\" /></a> It is also possible for us to express the same by having a single “LIKE” relationship and adding a property called “strength”. The strength property can decide how strong the relationship is. <a href=\"https://vista-mindtree.cloudapp.net/coe_open/wp-content/uploads/2015/06/6.png\"><img class=\"alignnone size-full wp-image-5201\" src=\"https://vista-mindtree.cloudapp.net/coe_open/wp-content/uploads/2015/06/6.png\" alt=\"graphmodeling6\" width=\"464\" height=\"271\" /></a>  </p>\n\n<h2>CONCLUSION This blog describes a few guidelines to follow when modeling a graph, but is not exhaustive. Please share your thoughts, comments and musings below :)</h2>\n",
  "status": "PUBLISHED",
  "viewed_by": [],
  "tags": ["graph", "model", "design"],
  "liked_by": [],
  "comments": [],
  "dateOfPublishing": "2016-06-17T16:25:24.290Z"
}